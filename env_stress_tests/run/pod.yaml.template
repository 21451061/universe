apiVersion: v1
kind: Pod
metadata:
  generateName: cputest-__CPU_QUOTA__-
  labels:
    cpu_quota: "__CPU_QUOTA__"
    env_id: __ENV_ID__
    noht: "__DISABLE_HYPERTHREADS__"
spec:
  containers:
  - name: agent
    image: docker.openai.com/diagnostic-agent
    command: ["/bin/bash", "-ce", "
        python /app/diagnostic-agent.py -e __ENV_ID__ -A forward -r vnc://localhost:5899+15899 -R -E 1 -T 600 ;
        echo -n | nc localhost 9999
    "]
    resources:
      requests:
        cpu: 2
  - name: env
    image: docker.openai.com/universe.flashgames
    command: ["/bin/bash", "-ce", "
        /app/universe-envs/flashgames/init run &
        python -c 'import socket; s = socket.socket(); s.bind((\"localhost\", 9999)); s.listen(1); s.accept()[0].close()' # don't have netcat
    "]
    env:
      - name: RECORDER_LOGDIR
        value: __RECORDER_LOGDIR__
      - name: VNC_ENCODINGS_NO_ADD_PSEUDO_CURSOR_ENCODING
        value: "true"
    securityContext:
      privileged: true
      capabilities:
        add: ["NET_ADMIN", "SYS_ADMIN"]
    volumeMounts:
      - name: efs
        mountPath: /mnt/efs
    resources:
      limits:
        cpu: __CPU_QUOTA__
  volumes:
  - name: efs
    persistentVolumeClaim:
      claimName: nfs-us-west-claim
  hostIPC: true
  restartPolicy: Never
  nodeSelector:
    azure/type: Standard_H16
    openai/computing: "__DISABLE_HYPERTHREADS__"
